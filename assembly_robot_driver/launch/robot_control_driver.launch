<?xml version="1.0"?>
<launch>
  <arg name="debug" default="false" doc="Debug flag that will get passed on to ur_control.launch"/>
  <arg name="use_tool_communication" default="true" doc="On e-Series robots tool communication can be enabled with this argument"/>
  <arg name="rob1_controller_config_file" default="$(find assembly_robot_driver)/config/rob1_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
  <arg name="rob2_controller_config_file" default="$(find assembly_robot_driver)/config/rob2_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
  <arg name="robot_ip" default="192.168.13.101" doc="IP address by which the robot can be reached."/>
  <arg name="reverse_port" default="50001" doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>
  <arg name="script_sender_port" default="50002" doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>
  <arg name="kinematics_config" default="$(find ur_e_description)/config/ur5e_default.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
  <arg name="tf_prefix" default="rob1_" doc="tf_prefix used for the robot."/>
  <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller robot_status_controller" doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller" doc="Controllers that are initally loaded, but not started."/>
  <arg name="tool_voltage" default="0" doc="Tool voltage set at the beginning of the UR program. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_parity" default="0" doc="Parity configuration used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_baud_rate" default="115200" doc="Baud rate used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_stop_bits" default="1" doc="Number of stop bits used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_rx_idle_chars" default="1.5" doc="Number of idle chars in RX channel used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_tx_idle_chars" default="3.5" doc="Number of idle chars in TX channel used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_device_name" default="/tmp/ttyUR" doc="Local device name used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_tcp_port" default="54321" doc="Port on which the robot controller publishes the tool comm interface. Only used, when `use_tool_communication` is set to true."/>
  <arg name="limited" default="false" doc="Use the description in limited mode (Every axis rotates from -PI to PI)"/>
  <arg name="headless_mode" default="false" doc="Automatically send URScript to robot to execute. On e-Series this does require the robot to be in 'remote-control' mode. With this, the URCap is not needed on the robot."/>
  <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" />
  <arg name="rviz" default="true" />

  <!-- robot model -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find assembly_robot_description)/urdf/rob1_rob2_multiarm.urdf.xacro'
      transmission_hw_interface:=$(arg transmission_hw_interface)
      kinematics_config:=$(arg kinematics_config)"
  />

  <!-- Convert joint states to /tf tranforms -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <group ns="rob1">
    <include file="$(find ur_robot_driver)/launch/ur_control.launch">
      <arg name="debug" value="$(arg debug)"/>
      <arg name="use_tool_communication" value="$(arg use_tool_communication)"/>
      <arg name="controller_config_file" value="$(arg rob1_controller_config_file)"/>
      <arg name="robot_ip" value="192.168.13.101"/>
      <arg name="reverse_port" value="$(arg reverse_port)"/>
      <arg name="script_sender_port" value="$(arg script_sender_port)"/>
      <arg name="kinematics_config" value="$(arg kinematics_config)"/>
      <arg name="tf_prefix" value="rob1_"/>
      <arg name="controllers" value="$(arg controllers)"/>
      <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
      <arg name="headless_mode" value="$(arg headless_mode)"/>
      <arg name="tool_voltage" value="$(arg tool_voltage)"/>
      <arg name="tool_parity" value="$(arg tool_parity)"/>
      <arg name="tool_baud_rate" value="$(arg tool_baud_rate)"/>
      <arg name="tool_stop_bits" value="$(arg tool_stop_bits)"/>
      <arg name="tool_rx_idle_chars" value="$(arg tool_rx_idle_chars)"/>
      <arg name="tool_tx_idle_chars" value="$(arg tool_tx_idle_chars)"/>
      <arg name="tool_device_name" value="$(arg tool_device_name)"/>
      <arg name="tool_tcp_port" value="$(arg tool_tcp_port)"/>
    </include>
  </group>


<group ns="rob2">
    <include file="$(find ur_robot_driver)/launch/ur_control.launch">
      <arg name="debug" value="$(arg debug)"/>
      <arg name="use_tool_communication" value="$(arg use_tool_communication)"/>
      <arg name="controller_config_file" value="$(arg rob2_controller_config_file)"/>
      <arg name="robot_ip" value="192.168.13.100"/>
      <arg name="reverse_port" value="50001"/>
      <arg name="script_sender_port" value="50002"/>
      <arg name="kinematics_config" value="$(arg kinematics_config)"/>
      <arg name="tf_prefix" value="rob2_"/>
      <arg name="controllers" value="$(arg controllers)"/>
      <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
      <arg name="headless_mode" value="$(arg headless_mode)"/>
      <arg name="tool_voltage" value="$(arg tool_voltage)"/>
      <arg name="tool_parity" value="$(arg tool_parity)"/>
      <arg name="tool_baud_rate" value="$(arg tool_baud_rate)"/>
      <arg name="tool_stop_bits" value="$(arg tool_stop_bits)"/>
      <arg name="tool_rx_idle_chars" value="$(arg tool_rx_idle_chars)"/>
      <arg name="tool_tx_idle_chars" value="$(arg tool_tx_idle_chars)"/>
      <arg name="tool_device_name" value="$(arg tool_device_name)"/>
      <arg name="tool_tcp_port" value="$(arg tool_tcp_port)"/>
    </include>
  </group>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
    <rosparam param="source_list">["/rob1/joint_states", "/rob2/joint_states"]</rosparam>
  </node>

  <include file="$(find assembly_robot_moveit_config)/launch/assembly_robot_moveit_planning_execution.launch">
  </include>

  <node if="$(arg rviz)" name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
  args="-d $(find assembly_robot_moveit_config)/launch/moveit.rviz" output="screen">
      <rosparam command="load" file="$(find assembly_robot_moveit_config)/config/kinematics.yaml"/>
  </node>

</launch>
